#INCLUDE "PROTHEUS.CH"
#INCLUDE "TOPCONN.CH"
#include "TBICONN.CH"

#define ENTER CHR(13)+CHR(10)

Static nVLOutEnt := 0

*=====================================================================================================================================*
/*/{Protheus.doc} GTFIN041
//TODO Fonte para tratamento de funções com retorno TEXTO no processo de CNAB via ACCESSTAEG:
nOPCAO := 1 "U_NOEMP() - FAZ O TRATAMENTO PARA RETORNAR APENAS O PRIMEIRO NOME DA EMPRESA DO SIGAMAT.EMP (CHAMADO NO CAMPO)" 
nOPCAO := 2 "U_PARBCO() - TRATAMENTO DOS CAMPOS DO PARAMETROS DO BANCO (FINA130) EM CASO DE SELEÇÃO DE ACCESSTAGE COMO "SIM", PREENCHENDO ALGUNS CAMPOS COM DADOS PADRÕES. (CHAMADO NO CAMPO)" 
nOPCAO := 3 "U_ACCESST(cPergunt) - FUNÇÃO PARA AUTO PREENCHIMENTO DOS PERGUNTES "AFI420,AFI430,AFI150 E AFI200" COM O NOME DO ARQUIVO DE CONFIG E O DIRETÓRIO DE SAIDA E NOME DO ARQUIVO CNAB"
nOPCAO := 4 "U_LAYCNAB() - FUNÇÃO QUE CRIA O ARQUIVO DE LAYOUT DO CNAB PARA REMESSA DE PAGAMENTO/COBRANÇA E RETORNO DE PAGAMENTO/COBRANÇA PADRÃO FEBRABAN"
nOPCAO := 5 "U_INFOTRIB() - FUNÇÃO CHAMADA NO ARQUIVO DE LAYOUT CNAB NO TRECHO ONDE MONTA AS INFORMAÇÕES DE TRIBUTOS (CHAMADO NO ARQUIVO DE LAYOUT FEBRABAN)"
nOPCAO := 6 "U_INFOCOMP() - FUNÇÃO CHAMADO NO ARQUIVO DE LAYOUT CANB NO TRECHO ONDE MONTA AS INFORMAÇÕES COMPLEMENTARES DO PAGAMENTO DE FGTS SEGMENTO "W" (CHAMADO NO ARQUIVO DE LAYOUT FEBRABAN)"
nOPCAO := 7 "U_TPIMPRES() - INFORMACAO REFERENTE AO TIPO DE IMPRESSAO DO BOLETO NO MOMENTO DE GERAR O ARQUIVO CNAB DE RECEBIMENTO (CHAMADO NO ARQUIVO DE LAYOUT FEBRABAN)"
nOPCAO := 8 "U_RETINFO() - FUNÇÃO ONDE RETORNA A MENSAGEM PARA IMPRESSAO NO BOLETO NA GERAÇÃO DO CNAB DE RECEBIMENTO. (CHAMADO NO ARQUIVO DE LAYOUT FEBRABAN)"
nOPCAO := 9 "U_MODBORD() - FUNÇÃO PARA CADASTRAR NA TABELA SX5 OS MODELOS E TIPOS DE PAGAMENTO QUE FALTAM"
nOPCAO := 10"U_ConvLD() - FUNÇÃO PARA CONVERTER CÓDIGO DE BARRAS EM LINHA DIGITAVEL (CAMPOS E2_LINDIG E E2_CODBAR) (GATILHO DO CAMPO)"
nOPCAO := 11"U_CTADVFAV() - FUNÇÃO PARA TRATAR A CONTA E O DIGITO VERIFICADOR DO FAVORECIDO RETORNANDO DA SE2 OU SA2.

@author Leosanlim
@since 02/01/2019
@version 1.0
@return ${return}, ${return_description}
@type function
/*/
USER FUNCTION GTFIN041(nOPCAO,cDados)
*=====================================================================================================================================*
LOCAL cRet := ""

//INICIO VARIAVEIS DA FUNÇÃO U_PARBCO()
LOCAL cCodEmp := ""//SM0->M0_CODIGO//+"-"+
LOCAL cUnidade := ""//IF(cCodEmp == "99","D:\ASTAGE\CNAB\","\\SRVDCASTAGE01\E$\ASTAGE\CNAB\")
LOCAL cCorpCli := ""//IF(GETMV("MV_P_00122"),"CORP\","CLI\")
LOCAL cDiretorio := ""//ALLTRIM(cUnidade)+ALLTRIM(cCorpCli)+ALLTRIM(SM0->M0_CODIGO)+"\"+ALLTRIM(M->EE_CODIGO)+"\"+ALLTRIM(M->EE_CONTA)
LOCAL cMSG := ""

//FIM  VARIAVEIS DA FUNÇÃO U_PARBCO()\\
//INICIO VARIAVEIS DA FUNÇÃO U_ACCESST(cPergunt)
LOCAL cPergunt 
LOCAL cArqCfg := ""
LOCAL cArqEnv := ""//cValToChar(SM0->M0_CODIGO)+"_"+ DTOS(date()) + "_" + STRTRAN(TIME(), ":","") +"."+SEE->EE_EXTEN
LOCAL cBanco   := ""//IF(cPergunt == "AFI200",MV_PAR06,MV_PAR05)
LOCAL cAgencia := ""//IF(cPergunt == "AFI200",MV_PAR07,MV_PAR06)//IF(cPergunt == "AFI420",MV_PAR06,mv_agencia)
LOCAL cConta   := ""//IF(cPergunt == "AFI200",MV_PAR08,MV_PAR07)//IF(cPergunt == "AFI420",MV_PAR07,mv_cta)
LOCAL cSubCta  := ""//IF(cPergunt == "AFI200",MV_PAR09,MV_PAR08)//IF(cPergunt == "AFI420",MV_PAR08,mv_subcta)
LOCAL cOperac  := ""
LOCAL cArqCnab := ""
LOCAL cOper := ""

//FIM VARIAVEIS DA FUNÇÃO U_ACCESST(cPergunt)
//INICIO VARIAVEIS DA FUNÇÃO U_LAYCNAB()
LOCAL aArqLay := {}
LOCAL nHandle
LOCAL cTxto  := ""
LOCAL cMsgLayout := ""

//FIM VARIAVEIS DA FUNÇÃO U_LAYCNAB()
//INICIO VARIAVEIS DA FUNÇÃO U_INFOTRIB()
LOCAL cModPag    := ""//Posicione("SEA",1,xFilial("SEA")+SE2->E2_NUMBOR+SE2->E2_PREFIXO+SE2->E2_NUM+SE2->E2_PARCELA,"EA_MODELO")
LOCAL nOutEnt	 := 0
//FIM VARIAVEIS DA FUNÇÃO U_INFOTRIB()
//INICIO VARIAVEIS DA FUNÇÃO nOPCAO == 8 U_RETINFO()
LOCAL cVal //PARAMIXB[1]
//FIM VARIAVEIS DA FUNÇÃO nOPCAO == 8 U_RETINFO()
//INICIO VARIAVEIS DA FUNÇÃO U_MODBORD()
LOCAL aModelo := {}
LOCAL cMsgModBor :=""
//FIM VARIAVEIS DA FUNÇÃO U_MODBORD()
//INICIO VARIAVEIS DA FUNÇÃO U_ConvLD()
local cStr := ""
//FIM VARIAVEIS DA FUNÇÃO U_ConvLD()

//U_GTFIN041(9,'')//FUNÇÃO PARA CADASTRAR OS MODELOS DE BORDERO FALTANTES.
		
/*************************
INICIO DAS OPÇÕES 
*************************/
DO CASE

	CASE nOPCAO == 9 //U_MODBORD()

		AADD(aModelo,{"58","01","CREDITO EM CONTA CORRENTE","CREDITO EN CUENTA CORRIENTE","CREDIT IN CHECKING ACCOUNT"})
		AADD(aModelo,{"58","02","CHEQUE PAGAMENTO/ADMINISTRATIVO","CHEQUE PAGO/ADMINISTRATIVO","PAYMENT/ADMINISTRATIVE CHEQUE"})
		AADD(aModelo,{"58","03","DOC","DOC","DOC"})
		AADD(aModelo,{"58","04","OP A DISPOSICAO COM AVISO PARA O FAVORECIDO","ORDEN DE PAGO DISPONIBLE CON AVISO AL BENEFICIARIO","AVAILABLE PO WITH NOTICE FOR THE BENEFICIARY"})
		AADD(aModelo,{"58","05","CREDITO EM CONTA POUPANCA","CREDITO EN CAJA DE AHORROS","CREDIT IN SAVINGS ACCOUNT"})
		AADD(aModelo,{"58","10","OP `A DISPOSICAO SEM AVISO PARA O FAVORECIDO","ORDEN DE PAGO DISPONIBLE SIN AVISO AL BENEFICIARIO","AVAILABLE OP WITHOUT NOTICE TO BENEFICIARY"})
		AADD(aModelo,{"58","11","PAGAMENTO DE CONTAS/TRUBUTOS COM CÓDIGO DE BARRAS","PAGAMENTO DE CONTAS/TRUBUTOS COM CÓDIGO DE BARRAS","PAGAMENTO DE CONTAS/TRUBUTOS COM CÓDIGO DE BARRAS"})
		AADD(aModelo,{"58","13","PAGAMENTO A CONCESSIONARIAS","PAGO A CONCESIONARIAS","PAYMENT TO CAR DEALERS"})
		AADD(aModelo,{"58","16","PAGAMENTO DE TRIBUTOS - DARF NORMAL","PAGO DE TRIBUTOS - DARF NORMAL","TAXES PAYMENT - NORMAL DARF"})
		AADD(aModelo,{"58","17","PAGAMENTO DE TRIBUTOS - GPS","PAGO DE TRIBUTOS - GPS","TAXES PAYMENT - GPS"})
		AADD(aModelo,{"58","18","PAGAMENTO DE TRIBUTOS - DARF SIMPLES","PAGO DE TRIBUTOS - DARF SIMPLE","TAXES PAYMENT - SIMPLE DARF"})
		AADD(aModelo,{"58","19","TRIBUTO - IPTU/ISS/OUTROS TRIBUTOS MUNICIPAIS","TRIBUTO - IPTU/ISS/OUTROS TRIBUTOS MUNICIPAIS","TRIBUTO - IPTU/ISS/OUTROS TRIBUTOS MUNICIPAIS"})
		AADD(aModelo,{"58","21","PAGAMENTO DE TRIBUTOS - DARJ","PAGO DE TRIBUTOS - DARJ","TAXES PAYMENT - DARJ"})
		AADD(aModelo,{"58","22","TRIBUTOS GARE-SP ICMS","TRIBUTOS GARE-SP ICMS","TRIBUTOS GARE-SP ICMS"})
		AADD(aModelo,{"58","23","TRIBUTOS DARE-SP DR","TRIBUTOS DARE-SP DR","TRIBUTOS DARE-SP DR"})
		AADD(aModelo,{"58","25","TRIBUTOS IPVA (SP e MG)","TRIBUTOS IPVA (SP e MG)","TRIBUTOS IPVA (SP e MG)"})
		AADD(aModelo,{"58","26","TRIBUTOS LICENCIAMENTO","TRIBUTOS LICENCIAMENTO","TRIBUTOS LICENCIAMENTO"})
		AADD(aModelo,{"58","27","TRIBUTOS DPVAT","TRIBUTOS DPVAT","TRIBUTOS DPVAT"})
		AADD(aModelo,{"58","30","LIQUIDACAO DE TITULOS EM COBRANCA NO ITAU","LIQUIDACION DE TITULOS EN COBRANZA EN EL BANCO ITAU","BILL SETTLEMENT UNDER ITAU BANK COLLECTION"})
		AADD(aModelo,{"58","31","PAGAMENTO DE TITULOS EM OUTRO BANCO","PAGO DE TITULOS EN OTRO BANCO","PAYMENT OF BILLS AT ANOTHER BANK"})
		AADD(aModelo,{"58","35","TRIBUTOS FGTS","TRIBUTOS FGTS","TRIBUTOS FGTS"})
		AADD(aModelo,{"58","41","TED - Outro Titular","TED - Otro Titular","TED - Another Holder"})
		AADD(aModelo,{"58","43","TED - Mesmo titular","TED - Mismo titular","TED - Same Holder"})
		
		AADD(aModelo,{"59","22","PAGAMENTO TRIBUTOS","PAGAMENTO TRIBUTOS","PAGAMENTO TRIBUTOS"})

		For nI := 1 To Len(aModelo)
			If !SX5->(DbSeek(xFilial("SX5")+aModelo[nI,1]+aModelo[nI,2]))
				//MsgAlert("Modelo de bordero: ("+aModelo[nI,2]+" - "+aModelo[nI,3]+") não existe e sera criado.")
				SX5->(dbAppend( .F. ))
					SX5->X5_FILIAL    := xFilial("SX5")
					SX5->X5_TABELA    := aModelo[nI,1]
					SX5->X5_CHAVE     := aModelo[nI,2]
					SX5->X5_DESCRI    := aModelo[nI,3]
					SX5->X5_DESCSPA   := aModelo[nI,4]
					SX5->X5_DESCENG   := aModelo[nI,5]
				SX5->(dbUnlock())
				cMsgModBor += aModelo[nI,2]+" - "+aModelo[nI,3] + ENTER 

			EndIf
		Next nI
		
		IF !EMPTY(cMsgModBor)
			AVISO("<center><h3><font color='#7db9e8'>MODELOS DE BORDERO CRIADOS!!</font></h2></center>","OS MODELOS DE BODERO FORAM CRIADOS COM SUCESO: "+ENTER+cMsgModBor,{"OK"}, 3)
		ENDIF

	ENDCASE

Return(cRet)
*=====================================================================================================================================*
